{"version":3,"sources":["helpers/SpaceHelper.js","components/Star/Star.js","components/Planet/Planet.js","components/Moon/Moon.js","components/Orbit/Orbit.js","components/PlanetSystem/PlanetSystem.js","components/SolarSystem/SolarSystem.js","components/Space/ui/SpaceBackground/SpaceBackground.js","components/Space/ui/GenerateButton/GenerateButton.js","components/Space/Space.js","App.js","index.js"],"names":["createSolarSystem","starSize","Math","ceil","random","numberOfPlanets","planetObjects","i","planetSize","distance","tto","calculateDistance","numberOfMoons","floor","moonObjects","j","moonSize","push","index","prevObject","type","calculatedDistance","length","Star","this","props","refs","star","style","setProperty","setStarStyleProperties","react_default","a","createElement","ref","className","React","Component","Planet","planet","setPlanetStyleProperties","Moon","_this$props","moon","calculateRotation","fromPosition","round","toPosition","setMoonStyleProperties","Orbit","orbit","setOrbitStyleProperties","PlanetSystem","planetSystem","setPlanetSystemStyleProperties","_this$props2","components_Planet_Planet","map","key","components_Moon_Moon","components_Orbit_Orbit","SolarSystem","_this$props$solarSyst","solarSystem","components_Star_Star","components_PlanetSystem_PlanetSystem","SpaceBackground","GenerateButton","updateSolarSystem","onClick","Space","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","spaceZoom","event","space","zoom","deltaY","state","setState","addEventListener","ui_SpaceBackground_SpaceBackground","ui_GenerateButton_GenerateButton","components_SolarSystem_SolarSystem","App","components_Space_Space","ReactDOM","render","src_App","document","getElementById"],"mappings":"8YAAaA,SAAoB,WAQ7B,IANA,IAAMC,EAAWC,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiB,GAG3CC,EAAkBH,KAAKC,KAAqB,EAAhBD,KAAKE,UAAgB,EACjDE,EAAgB,GAEbC,EAAI,EAAGA,EAAIF,EAAiBE,IAAK,CAetC,IAbA,IAAMC,EAAaN,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiB,EAG/CK,EAAgB,IAAJF,EAAWL,KAAKC,KAAqB,IAAhBD,KAAKE,UAAkBH,EAItDS,EAHND,EAAiB,IAANF,EAAUE,EAAWE,EAAkBF,EAAUH,EAAcC,EAAI,GAAI,UAM5EK,EAAgBV,KAAKW,MAAsB,EAAhBX,KAAKE,UAChCU,EAAc,GAEXC,EAAI,EAAGA,EAAIH,EAAeG,IAAK,CAEpC,IAAMC,EAAWd,KAAKC,KAAqB,EAAhBD,KAAKE,UAAgB,EAE5CK,EAAgB,GAAJM,EAAUb,KAAKC,KAAqB,GAAhBD,KAAKE,UAAiBI,EAGpDE,EAFND,EAAiB,IAANM,EAAUN,EAAWE,EAAkBF,EAAUK,EAAYC,EAAI,GAAI,QAIhFD,EAAYG,KACR,CACIC,MAAOH,EACPC,WACAP,WACAC,QAKZJ,EAAcW,KACV,CACIC,MAAOX,EACPC,aACAC,WACAC,MACAI,gBAKZ,MAAO,CACHb,WACAK,mBAIFK,EAAoB,SAACF,EAAUU,EAAYC,GAE7C,IAAIC,EAAqBnB,KAAKC,KAAKM,EAAkC,GAAtBU,EAAWV,SAAkBU,EAAWC,EAAO,SAG9F,GAAa,WAATA,GACID,EAAWL,YAAYQ,OAAS,EAAG,CACnC,IAAMR,EAAcK,EAAWL,YAC/BO,GAAsBP,EAAYA,EAAYQ,OAAS,GAAGb,SAIlE,OAAOY,GCnDIE,gNAhBc,IACbtB,EAAauB,KAAKC,MAAlBxB,SACKuB,KAAKE,KAAKC,KAElBC,MAAMC,YAAY,aAAc5B,EAAW,kDAIhDuB,KAAKM,0DAIL,OAAOC,EAAAC,EAAAC,cAAA,QAAMC,IAAI,OAAOC,UAAU,qBAbvBC,IAAMC,YCiBVC,kNAhBgB,IACf9B,EAAegB,KAAKC,MAApBjB,WACOgB,KAAKE,KAAKa,OAElBX,MAAMC,YAAY,eAAgBrB,EAAa,kDAItDgB,KAAKgB,4DAIL,OAAOT,EAAAC,EAAAC,cAAA,QAAMC,IAAI,SAASC,UAAU,uBAbvBC,IAAMC,YCsCZI,0MArCc,IAAAC,EACelB,KAAKC,MAAjCT,EADa0B,EACb1B,SAAUP,EADGiC,EACHjC,SAAUC,EADPgC,EACOhC,IACtBiC,EAAOnB,KAAKE,KAAKiB,KAEvBA,EAAKf,MAAMC,YAAY,aAAcb,EAAW,MAChD2B,EAAKf,MAAMC,YAAY,cAAepB,EAAW,MACjDkC,EAAKf,MAAMC,YAAY,QAASnB,EAAM,KAEtCc,KAAKoB,gEAIL,IAAMD,EAAOnB,KAAKE,KAAKiB,KAGnBE,EAAe3C,KAAK4C,MAAsB,IAAhB5C,KAAKE,UAC/B2C,EAAaF,EAAe,IAGE,IAA9B3C,KAAK4C,MAAM5C,KAAKE,YAChByC,IAA+B,EAC/BE,IAA2B,GAG/BJ,EAAKf,MAAMC,YAAY,iBAAkBgB,EAAe,OACxDF,EAAKf,MAAMC,YAAY,eAAgBkB,EAAa,mDAIpDvB,KAAKwB,0DAIL,OAAOjB,EAAAC,EAAAC,cAAA,QAAMC,IAAI,OAAOC,UAAU,qBAlCvBC,IAAMC,YCkBVY,2MAjBe,IACdxC,EAAae,KAAKC,MAAlBhB,SACFyC,EAAQ1B,KAAKE,KAAKwB,MAExBA,EAAMtB,MAAMC,YAAY,WAAwB,EAAXpB,EAAgB,MACrDyC,EAAMtB,MAAMC,YAAY,UAAuB,EAAXpB,EAAgB,kDAIpDe,KAAK2B,2DAIL,OAAOpB,EAAAC,EAAAC,cAAA,QAAMC,IAAI,QAAQC,UAAU,wBAdvBC,IAAMC,YCkEXe,2MA9DsB,IAAAV,EAEHlB,KAAKC,MAAvBhB,EAFqBiC,EAErBjC,SAAUC,EAFWgC,EAEXhC,IACZ2C,EAAe7B,KAAKE,KAAK2B,aAE/BA,EAAazB,MAAMC,YAAY,cAAepB,EAAW,MACzD4C,EAAazB,MAAMC,YAAY,QAASnB,EAAM,KAE9Cc,KAAKoB,gEAIL,IAAMS,EAAe7B,KAAKE,KAAK2B,aAG3BR,EAAe3C,KAAK4C,MAAsB,IAAhB5C,KAAKE,UAC/B2C,EAAaF,EAAe,IAGE,IAA9B3C,KAAK4C,MAAM5C,KAAKE,YAChByC,IAA+B,EAC/BE,IAA2B,GAG/BM,EAAazB,MAAMC,YAAY,iBAAkBgB,EAAe,OAChEQ,EAAazB,MAAMC,YAAY,eAAgBkB,EAAa,mDAI5DvB,KAAK8B,kEAGA,IAAAC,EAC+B/B,KAAKC,MAAjCjB,EADH+C,EACG/C,WAAYM,EADfyC,EACezC,YAEpB,OACIiB,EAAAC,EAAAC,cAAA,QAAMC,IAAI,eAAeC,UAAU,iBAC/BJ,EAAAC,EAAAC,cAACuB,EAAD,CAAQhD,WAAYA,IACnBM,EAAY2C,IAAI,SAACd,GAAS,IACfzB,EAAmCyB,EAAnCzB,MAAOF,EAA4B2B,EAA5B3B,SAAUP,EAAkBkC,EAAlBlC,SAAUC,EAAQiC,EAARjC,IAE7BgD,EAAMxC,EAAQT,EAAWC,EAC/B,OAAOqB,EAAAC,EAAAC,cAAC0B,EAAD,CACHD,IAAKA,EACL1C,SAAUA,EACVP,SAAUA,EACVC,IAAKA,MAGZI,EAAY2C,IAAI,SAACd,GAAS,IACfzB,EAAoByB,EAApBzB,MAAOT,EAAakC,EAAblC,SACTiD,EAAMxC,EAAQT,EACpB,OAAOsB,EAAAC,EAAAC,cAAC2B,EAAD,CACHF,IAAKA,EACLjD,SAAUA,cAvDP2B,IAAMC,WCmClBwB,mLAlCF,IAAAC,EAC+BtC,KAAKC,MAAMsC,YAAvC9D,EADH6D,EACG7D,SAAUK,EADbwD,EACaxD,cAElB,OACIyB,EAAAC,EAAAC,cAAA,QAAME,UAAU,eACZJ,EAAAC,EAAAC,cAAC+B,EAAD,CACIN,IAAKzD,EACLA,SAAUA,IAEbK,EAAcmD,IAAI,SAAClB,GAAW,IACnBrB,EAAkDqB,EAAlDrB,MAAOV,EAA2C+B,EAA3C/B,WAAYC,EAA+B8B,EAA/B9B,SAAUC,EAAqB6B,EAArB7B,IAAKI,EAAgByB,EAAhBzB,YAEpC4C,EAAMxC,EAAQT,EAAWC,EAC/B,OAAOqB,EAAAC,EAAAC,cAACgC,EAAD,CACHP,IAAKA,EACLlD,WAAYA,EACZC,SAAUA,EACVC,IAAKA,EACLI,YAAaA,MAGpBR,EAAcmD,IAAI,SAAClB,GAAW,IACnBrB,EAAoBqB,EAApBrB,MAAOT,EAAa8B,EAAb9B,SACTiD,EAAMxC,EAAQT,EACpB,OAAOsB,EAAAC,EAAAC,cAAC2B,EAAD,CACHF,IAAKA,EACLjD,SAAUA,cA3BR2B,IAAMC,WCOjB6B,SAVS,WACpB,OACInC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BCOZgC,0LAXF,IACGC,EAAsB5C,KAAKC,MAA3B2C,kBAER,OACIrC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAkBkC,QAASD,GACtCrC,EAAAC,EAAAC,cAAA,2CANaG,IAAMC,YCwDpBiC,cAnDX,SAAAA,EAAY7C,GAAO,IAAA8C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhD,KAAA8C,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAhD,KAAAgD,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAApD,KAAMC,KAWVoD,UAAY,SAACC,GACT,IAAMC,EAAQR,EAAK7C,KAAKqD,MACpBC,EAAO,EAGPA,EADAF,EAAMG,OAAS,EACRV,EAAKW,MAAMF,KAA0B,GAAlBT,EAAKW,MAAMF,KAG9BT,EAAKW,MAAMF,KAA0B,GAAlBT,EAAKW,MAAMF,KAGzCD,EAAMnD,MAAMC,YAAY,SAAUmD,GAClCT,EAAKY,SAAS,CAAEH,UAxBDT,EA2BnBH,kBAAoB,WAChBG,EAAKY,SAAS,CAAEpB,YAAa/D,OAzB7BuE,EAAKW,MAAQ,CACTF,KAAM,EACNjB,YAAa,CACT9D,SAAU,KACVK,cAAe,KAPRiE,mFAgCD/C,KAAKE,KAAKqD,MAClBK,iBAAiB,QAAS5D,KAAKqD,WAErCrD,KAAK4C,qDAIL,OACIrC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAACqD,EAAD,CAAgBlB,kBAAmB5C,KAAK4C,oBACxCrC,EAAAC,EAAAC,cAAA,QAAMC,IAAI,QAAQC,UAAU,mBACvBX,KAAK0D,MAAMnB,YAAYzD,cAAcgB,OAAS,GAAKS,EAAAC,EAAAC,cAACsD,EAAD,CAAaxB,YAAavC,KAAK0D,MAAMnB,uBA7CzF3B,IAAMC,WCEXmD,mLAJP,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,aAFGpD,aCElBqD,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.10582479.chunk.js","sourcesContent":["export const createSolarSystem = () => {\r\n    // Random size between 50 & 100\r\n    const starSize = Math.ceil(Math.random() * 50) + 50;\r\n\r\n    // Generate 2 to 7 planets\r\n    const numberOfPlanets = Math.ceil(Math.random() * 6) + 1;\r\n    const planetObjects = [];\r\n\r\n    for (let i = 0; i < numberOfPlanets; i++) {\r\n        // Random size between 5 & 25\r\n        const planetSize = Math.ceil(Math.random() * 20) + 5;\r\n\r\n        // This is to ensure planets are in the correct order from the star\r\n        let distance = (i * 100) + Math.ceil(Math.random() * 100) + starSize;\r\n        distance = i === 0 ? distance : calculateDistance(distance, planetObjects[i - 1], 'planet');\r\n\r\n        // Setting the TTO to the distance is a nice hack to make further planets orbit slower\r\n        const tto = distance;\r\n\r\n        // Generate 0 to 2 moons\r\n        const numberOfMoons = Math.floor(Math.random() * 3);\r\n        const moonObjects = [];\r\n\r\n        for (let j = 0; j < numberOfMoons; j++) {\r\n            // Random size between 2 & 4\r\n            const moonSize = Math.ceil(Math.random() * 3) + 1;\r\n\r\n            let distance = (j * 10) + Math.ceil(Math.random() * 10) + planetSize;\r\n            distance = j === 0 ? distance : calculateDistance(distance, moonObjects[j - 1], 'moon');\r\n\r\n            const tto = distance;\r\n\r\n            moonObjects.push(\r\n                {\r\n                    index: j,\r\n                    moonSize,\r\n                    distance,\r\n                    tto,\r\n                }\r\n            );\r\n        }\r\n\r\n        planetObjects.push(\r\n            {\r\n                index: i,\r\n                planetSize,\r\n                distance,\r\n                tto,\r\n                moonObjects,\r\n            }\r\n        );\r\n    }\r\n\r\n    return {\r\n        starSize,\r\n        planetObjects\r\n    };\r\n};\r\n\r\nconst calculateDistance = (distance, prevObject, type) => {\r\n    // This is to ensure bodies don't overlap\r\n    let calculatedDistance = Math.ceil(distance + (prevObject.distance * 0.3) + prevObject[type + 'Size']);\r\n\r\n    // This is to ensure the planets moons don't overlap with another planets moons\r\n    if (type === 'planet') {\r\n        if (prevObject.moonObjects.length > 0) {\r\n            const moonObjects = prevObject.moonObjects;\r\n            calculatedDistance += moonObjects[moonObjects.length - 1].distance;\r\n        }\r\n    }\r\n    \r\n    return calculatedDistance;\r\n};","import React from 'react';\r\nimport './Star.css';\r\n\r\nclass Star extends React.Component {\r\n    setStarStyleProperties() {\r\n        const { starSize } = this.props;\r\n        const star = this.refs.star;\r\n\r\n        star.style.setProperty('--starSize', starSize + 'px');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStarStyleProperties();\r\n    }\r\n\r\n    render() {\r\n        return <span ref='star' className='star-body' />\r\n    }\r\n}\r\n\r\nexport default Star;","import React from 'react';\r\nimport './Planet.css';\r\n\r\nclass Planet extends React.Component {\r\n    setPlanetStyleProperties() {\r\n        const { planetSize } = this.props;\r\n        const planet = this.refs.planet;\r\n\r\n        planet.style.setProperty('--planetSize', planetSize + 'px');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setPlanetStyleProperties();\r\n    }\r\n\r\n    render() {\r\n        return <span ref='planet' className='planet-body' />\r\n    }\r\n}\r\n\r\nexport default Planet;","import React from 'react';\r\nimport './Moon.css';\r\n\r\nclass Moon extends React.Component {\r\n    setMoonStyleProperties() {\r\n        const { moonSize, distance, tto } = this.props;\r\n        const moon = this.refs.moon;\r\n\r\n        moon.style.setProperty('--moonSize', moonSize + 'px');\r\n        moon.style.setProperty('--translate', distance + 'px');\r\n        moon.style.setProperty('--tto', tto + 's');\r\n\r\n        this.calculateRotation();\r\n    }\r\n\r\n    calculateRotation() {\r\n        const moon = this.refs.moon;\r\n\r\n        // Choose a random spawn position and adjust end position accordingly\r\n        let fromPosition = Math.round(Math.random() * 360);\r\n        let toPosition = fromPosition + 360;\r\n\r\n        // Determine whether rotation will be clockwise or counter clockwise\r\n        if (Math.round(Math.random()) === 0) {\r\n            fromPosition = fromPosition * -1;\r\n            toPosition = toPosition * -1;\r\n        }\r\n\r\n        moon.style.setProperty('--fromPosition', fromPosition + 'deg');\r\n        moon.style.setProperty('--toPosition', toPosition + 'deg');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setMoonStyleProperties();\r\n    }\r\n\r\n    render() {\r\n        return <span ref='moon' className='moon-body' />;\r\n    }\r\n}\r\n\r\nexport default Moon;","import React from 'react';\r\nimport './Orbit.css';\r\n\r\nclass Orbit extends React.Component {\r\n    setOrbitStyleProperties() {\r\n        const { distance } = this.props;\r\n        const orbit = this.refs.orbit;\r\n\r\n        orbit.style.setProperty('--height', (distance * 2) + 'px');\r\n        orbit.style.setProperty('--width', (distance * 2) + 'px');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setOrbitStyleProperties();\r\n    }\r\n\r\n    render() {\r\n        return <span ref='orbit' className='system-orbit' />;\r\n    }\r\n}\r\n\r\nexport default Orbit;","import React from 'react';\r\nimport './PlanetSystem.css';\r\nimport Planet from '../Planet/Planet';\r\nimport Moon from '../Moon/Moon';\r\nimport Orbit from '../Orbit/Orbit';\r\n\r\nclass PlanetSystem extends React.Component {\r\n    setPlanetSystemStyleProperties() {\r\n        // TTO = Time To Orbit\r\n        const { distance, tto } = this.props;\r\n        const planetSystem = this.refs.planetSystem;\r\n\r\n        planetSystem.style.setProperty('--translate', distance + 'px');\r\n        planetSystem.style.setProperty('--tto', tto + 's');\r\n\r\n        this.calculateRotation();\r\n    }\r\n\r\n    calculateRotation() {\r\n        const planetSystem = this.refs.planetSystem;\r\n\r\n        // Choose a random spawn position and adjust end position accordingly\r\n        let fromPosition = Math.round(Math.random() * 360);\r\n        let toPosition = fromPosition + 360;\r\n\r\n        // Determine whether rotation will be clockwise or counter clockwise\r\n        if (Math.round(Math.random()) === 0) {\r\n            fromPosition = fromPosition * -1;\r\n            toPosition = toPosition * -1;\r\n        }\r\n\r\n        planetSystem.style.setProperty('--fromPosition', fromPosition + 'deg');\r\n        planetSystem.style.setProperty('--toPosition', toPosition + 'deg');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setPlanetSystemStyleProperties();\r\n    }\r\n\r\n    render() {\r\n        const { planetSize, moonObjects } = this.props;\r\n\r\n        return (\r\n            <span ref='planetSystem' className='planet-system'>\r\n                <Planet planetSize={planetSize} />\r\n                {moonObjects.map((moon) => {\r\n                    const { index, moonSize, distance, tto } = moon;\r\n                    // Create a complex key to ensure proper re-render\r\n                    const key = index + distance + tto;\r\n                    return <Moon\r\n                        key={key}\r\n                        moonSize={moonSize}\r\n                        distance={distance}\r\n                        tto={tto}\r\n                    />;\r\n                })}\r\n                {moonObjects.map((moon) => {\r\n                    const { index, distance } = moon;\r\n                    const key = index + distance;\r\n                    return <Orbit\r\n                        key={key}\r\n                        distance={distance}\r\n                    />;\r\n                })}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlanetSystem;","import React from 'react';\r\nimport './SolarSystem.css';\r\nimport Star from '../Star/Star';\r\nimport PlanetSystem from '../PlanetSystem/PlanetSystem';\r\nimport Orbit from '../Orbit/Orbit';\r\n\r\nclass SolarSystem extends React.Component {\r\n    render() {\r\n        const { starSize, planetObjects } = this.props.solarSystem;\r\n\r\n        return (\r\n            <span className='system-body'>\r\n                <Star\r\n                    key={starSize}\r\n                    starSize={starSize}\r\n                />\r\n                {planetObjects.map((planet) => {\r\n                    const { index, planetSize, distance, tto, moonObjects } = planet;\r\n                    // Create a complex key to ensure proper re-render\r\n                    const key = index + distance + tto;\r\n                    return <PlanetSystem\r\n                        key={key}\r\n                        planetSize={planetSize}\r\n                        distance={distance}\r\n                        tto={tto}\r\n                        moonObjects={moonObjects}\r\n                    />;\r\n                })}\r\n                {planetObjects.map((planet) => {\r\n                    const { index, distance } = planet;\r\n                    const key = index + distance;\r\n                    return <Orbit\r\n                        key={key}\r\n                        distance={distance}\r\n                    />;\r\n                })}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SolarSystem;","import React from 'react';\r\nimport './SpaceBackground.css';\r\n\r\nconst SpaceBackground = () => {\r\n    return (\r\n        <span>\r\n            <div className=\"spacebackground-stars\" />\r\n            <div className=\"spacebackground-twinkling\" />\r\n            <div className=\"spacebackground-clouds\" />\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default SpaceBackground;","import React from 'react';\r\nimport './GenerateButton.css';\r\n\r\nclass GenerateButton extends React.Component {\r\n    render() {\r\n        const { updateSolarSystem } = this.props;\r\n\r\n        return (\r\n            <div className='generate-button' onClick={updateSolarSystem}>\r\n                <span>Generate new system</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GenerateButton;","import React from 'react';\r\nimport './Space.css';\r\nimport { createSolarSystem } from '../../helpers/SpaceHelper';\r\nimport SolarSystem from '../SolarSystem/SolarSystem';\r\nimport SpaceBackground from './ui/SpaceBackground/SpaceBackground';\r\nimport GenerateButton from './ui/GenerateButton/GenerateButton';\r\n\r\nclass Space extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            zoom: 1,\r\n            solarSystem: {\r\n                starSize: null,\r\n                planetObjects: []\r\n            },\r\n        };\r\n    }\r\n\r\n    spaceZoom = (event) => {\r\n        const space = this.refs.space;\r\n        let zoom = 0;\r\n\r\n        if (event.deltaY < 0) {\r\n            zoom = this.state.zoom + (this.state.zoom * 0.1);\r\n        }\r\n        else {\r\n            zoom = this.state.zoom - (this.state.zoom * 0.1);\r\n        }\r\n\r\n        space.style.setProperty('--zoom', zoom);\r\n        this.setState({ zoom });\r\n    };\r\n\r\n    updateSolarSystem = () => {\r\n        this.setState({ solarSystem: createSolarSystem() });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const space = this.refs.space;\r\n        space.addEventListener(\"wheel\", this.spaceZoom);\r\n\r\n        this.updateSolarSystem();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <SpaceBackground />\r\n                <GenerateButton updateSolarSystem={this.updateSolarSystem} />\r\n                <span ref='space' className=\"space-container\">\r\n                    {this.state.solarSystem.planetObjects.length > 0 && <SolarSystem solarSystem={this.state.solarSystem} />}\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Space;","import React, { Component } from 'react';\r\nimport Space from './components/Space/Space';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return <Space />\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}